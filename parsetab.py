
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftAWLA_LOGICALleftOUleftEQNEleftLTLEGTGEleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightMACHInonassocILA_IFXnonassocAWLAleftDOTASSIGN AWLA AWLA_LOGICAL BOOL CATCH CLASS COLON COMMA DICT DIVIDE DOT EQ EXCEPTION EXTENDS GE GT HRASS ID ILA ILA_IFX KEY KML KOULLA LBRACE LBRACKET LE LPAREN LT MACHI MINUS MNINTCHOUF NE NULL NUMBER OU PLUS PRIVATE PUBLIC RBRACE RBRACKET RJ3 RPAREN SEMI STRING THROW TIMES TRY TYPE UMINUSprogram : external_listexternal_list : external external_list\n| emptyexternal : function_def\n| statement\n| class_deffunction_def : TYPE ID LPAREN param_list RPAREN compoundparam_list : param_list_nonempty\n| emptyparam_list_nonempty : TYPE ID\n| TYPE ID COMMA param_list_nonemptyfunc_call : ID LPAREN arg_list RPARENarg_list : arg_list_nonempty\n| emptyarg_list_nonempty : expression\n| expression COMMA arg_list_nonemptycompound : LBRACE stmt_list RBRACEstmt_list : statement stmt_list\n| emptystatement : declaration_stmt\n| expression_stmt\n| if_stmt\n| while_stmt\n| for_stmt\n| return_stmt\n| break_stmt\n| continue_stmt\n| compound\n| try_stmt\n| throw_stmtdeclaration_stmt : TYPE ID SEMI\n| TYPE ID ASSIGN expression SEMIdeclaration_stmt : TYPE ID LBRACKET NUMBER RBRACKET SEMIexpression_stmt : expression SEMIexpression_stmt : func_call SEMIexpression : assignment\n| binary_exprassignment : ID ASSIGN expressionassignment : ID LBRACKET expression RBRACKET ASSIGN expressionbinary_expr : binary_expr PLUS binary_expr\n| binary_expr MINUS binary_expr\n| binary_expr TIMES binary_expr\n| binary_expr DIVIDE binary_expr\n| binary_expr OU binary_expr\n| binary_expr AWLA_LOGICAL binary_expr\n| binary_expr LT binary_expr\n| binary_expr LE binary_expr\n| binary_expr GT binary_expr\n| binary_expr GE binary_expr\n| binary_expr EQ binary_expr\n| binary_expr NE binary_exprbinary_expr : MINUS binary_expr %prec UMINUSbinary_expr : MACHI binary_exprbinary_expr : LPAREN expression RPAREN\n| NUMBER\n| STRING\n| BOOL\n| NULL\n| ID\n| func_callif_stmt : ILA LPAREN expression RPAREN statement AWLA statement\n| ILA LPAREN expression RPAREN statement %prec ILA_IFXwhile_stmt : MNINTCHOUF LPAREN expression RPAREN statementfor_stmt : KOULLA LPAREN expression SEMI expression SEMI expression RPAREN statementopt_expr : expression\n| emptybreak_stmt : HRASS SEMIcontinue_stmt : KML SEMIreturn_stmt : RJ3 opt_expr SEMIbinary_expr : LBRACKET arg_list RBRACKETbinary_expr : binary_expr LBRACKET expression RBRACKETbinary_expr : LBRACE dict_items RBRACEdict_items : dict_item_list\n| emptydict_item_list : dict_item\n| dict_item COMMA dict_item_listdict_item : expression COLON expressionclass_def : CLASS ID class_inheritance LBRACE class_body RBRACEclass_inheritance : EXTENDS ID\n| emptyclass_body : class_member class_body\n| emptyclass_member : property_decl\n| method_declproperty_decl : access_modifier TYPE ID SEMI\n| access_modifier TYPE ID ASSIGN expression SEMImethod_decl : access_modifier TYPE ID LPAREN param_list RPAREN compoundaccess_modifier : PUBLIC\n| PRIVATE\n| emptybinary_expr : binary_expr DOT IDbinary_expr : binary_expr DOT ID LPAREN arg_list RPARENtry_stmt : TRY compound catch_clausescatch_clauses : catch_clause catch_clauses\n| catch_clausecatch_clause : CATCH LPAREN EXCEPTION ID RPAREN compoundthrow_stmt : THROW expression SEMIempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,11,12,13,14,15,16,17,18,19,20,21,43,61,66,73,74,96,108,120,121,122,124,155,161,172,173,178,179,181,190,197,200,],[-98,0,-1,-98,-3,-4,-5,-6,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-2,-34,-35,-67,-68,-31,-17,-69,-93,-95,-97,-94,-32,-62,-63,-7,-33,-78,-61,-96,-64,]),'TYPE':([0,3,5,6,7,11,12,13,14,15,16,17,18,19,20,21,23,55,61,66,73,74,76,95,96,108,120,121,122,124,147,152,153,155,161,165,166,167,168,169,170,171,172,173,177,178,179,181,184,190,193,195,196,197,200,201,203,],[8,8,-4,-5,-6,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,59,59,-34,-35,-67,-68,59,139,-31,-17,-69,-93,-95,-97,-98,59,59,-94,-32,-98,-90,-83,-84,183,-88,-89,-62,-63,139,-7,-33,-78,59,-61,-85,139,59,-96,-64,-86,-87,]),'CLASS':([0,3,5,6,7,11,12,13,14,15,16,17,18,19,20,21,61,66,73,74,96,108,120,121,122,124,155,161,172,173,178,179,181,190,197,200,],[22,22,-4,-5,-6,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-34,-35,-67,-68,-31,-17,-69,-93,-95,-97,-94,-32,-62,-63,-7,-33,-78,-61,-96,-64,]),'ILA':([0,3,5,6,7,11,12,13,14,15,16,17,18,19,20,21,23,55,61,66,73,74,76,96,108,120,121,122,124,152,153,155,161,172,173,178,179,181,184,190,196,197,200,],[28,28,-4,-5,-6,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,28,28,-34,-35,-67,-68,28,-31,-17,-69,-93,-95,-97,28,28,-94,-32,-62,-63,-7,-33,-78,28,-61,28,-96,-64,]),'MNINTCHOUF':([0,3,5,6,7,11,12,13,14,15,16,17,18,19,20,21,23,55,61,66,73,74,76,96,108,120,121,122,124,152,153,155,161,172,173,178,179,181,184,190,196,197,200,],[29,29,-4,-5,-6,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,29,29,-34,-35,-67,-68,29,-31,-17,-69,-93,-95,-97,29,29,-94,-32,-62,-63,-7,-33,-78,29,-61,29,-96,-64,]),'KOULLA':([0,3,5,6,7,11,12,13,14,15,16,17,18,19,20,21,23,55,61,66,73,74,76,96,108,120,121,122,124,152,153,155,161,172,173,178,179,181,184,190,196,197,200,],[30,30,-4,-5,-6,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,30,30,-34,-35,-67,-68,30,-31,-17,-69,-93,-95,-97,30,30,-94,-32,-62,-63,-7,-33,-78,30,-61,30,-96,-64,]),'RJ3':([0,3,5,6,7,11,12,13,14,15,16,17,18,19,20,21,23,55,61,66,73,74,76,96,108,120,121,122,124,152,153,155,161,172,173,178,179,181,184,190,196,197,200,],[31,31,-4,-5,-6,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,31,31,-34,-35,-67,-68,31,-31,-17,-69,-93,-95,-97,31,31,-94,-32,-62,-63,-7,-33,-78,31,-61,31,-96,-64,]),'HRASS':([0,3,5,6,7,11,12,13,14,15,16,17,18,19,20,21,23,55,61,66,73,74,76,96,108,120,121,122,124,152,153,155,161,172,173,178,179,181,184,190,196,197,200,],[32,32,-4,-5,-6,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,32,32,-34,-35,-67,-68,32,-31,-17,-69,-93,-95,-97,32,32,-94,-32,-62,-63,-7,-33,-78,32,-61,32,-96,-64,]),'KML':([0,3,5,6,7,11,12,13,14,15,16,17,18,19,20,21,23,55,61,66,73,74,76,96,108,120,121,122,124,152,153,155,161,172,173,178,179,181,184,190,196,197,200,],[33,33,-4,-5,-6,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,33,33,-34,-35,-67,-68,33,-31,-17,-69,-93,-95,-97,33,33,-94,-32,-62,-63,-7,-33,-78,33,-61,33,-96,-64,]),'LBRACE':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,23,25,31,34,35,38,39,45,46,47,51,52,55,61,66,67,68,69,73,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,105,107,108,112,114,116,120,121,122,124,148,152,153,154,155,158,160,161,163,172,173,178,179,181,184,185,190,192,194,196,197,200,202,],[23,23,-4,-5,-6,51,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,23,51,51,76,51,51,51,51,51,51,51,-98,23,-34,-35,51,51,51,-67,-68,23,51,51,51,51,51,51,51,51,51,51,51,51,51,-31,51,147,-80,-17,51,51,51,-69,-93,-95,-97,-79,23,23,51,-94,51,76,-32,51,-62,-63,-7,-33,-78,23,51,-61,76,51,23,-96,-64,76,]),'TRY':([0,3,5,6,7,11,12,13,14,15,16,17,18,19,20,21,23,55,61,66,73,74,76,96,108,120,121,122,124,152,153,155,161,172,173,178,179,181,184,190,196,197,200,],[34,34,-4,-5,-6,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,34,34,-34,-35,-67,-68,34,-31,-17,-69,-93,-95,-97,34,34,-94,-32,-62,-63,-7,-33,-78,34,-61,34,-96,-64,]),'THROW':([0,3,5,6,7,11,12,13,14,15,16,17,18,19,20,21,23,55,61,66,73,74,76,96,108,120,121,122,124,152,153,155,161,172,173,178,179,181,184,190,196,197,200,],[35,35,-4,-5,-6,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,35,35,-34,-35,-67,-68,35,-31,-17,-69,-93,-95,-97,35,35,-94,-32,-62,-63,-7,-33,-78,35,-61,35,-96,-64,]),'ID':([0,3,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,31,35,38,39,45,46,47,51,55,59,61,66,67,68,69,73,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,106,108,112,114,116,120,121,122,124,139,152,153,154,155,158,161,163,172,173,175,178,179,181,183,184,185,190,194,196,197,200,],[9,9,-4,-5,-6,44,49,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,52,9,49,49,49,93,93,49,49,49,49,9,113,-34,-35,49,49,49,-67,-68,9,93,93,93,93,93,93,93,93,93,93,93,93,49,138,-31,49,148,-17,49,49,49,-69,-93,-95,-97,159,9,9,49,-94,49,-32,49,-62,-63,186,-7,-33,-78,189,9,49,-61,49,9,-96,-64,]),'MINUS':([0,3,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,31,35,37,38,39,40,41,42,45,46,47,49,50,51,55,61,66,67,68,69,73,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,96,97,102,108,109,112,114,115,116,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,145,152,153,154,155,157,158,161,163,172,173,178,179,181,184,185,187,190,194,196,197,200,],[38,38,-4,-5,-6,-59,38,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,38,38,-55,-60,38,38,79,38,38,-56,-57,-58,38,38,38,-59,-60,38,38,-34,-35,38,38,38,-67,-68,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-52,-59,-53,-31,38,-54,-17,-72,38,38,-70,38,-69,-93,-95,-97,-40,-41,-42,-43,79,79,79,79,79,79,79,79,-91,-12,38,38,38,-94,-71,38,-32,38,-62,-63,-7,-33,-78,38,38,-92,-61,38,38,-96,-64,]),'MACHI':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,23,25,31,35,38,39,45,46,47,51,55,61,66,67,68,69,73,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,108,112,114,116,120,121,122,124,152,153,154,155,158,161,163,172,173,178,179,181,184,185,190,194,196,197,200,],[39,39,-4,-5,-6,39,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,39,39,39,39,39,39,39,39,39,39,39,-34,-35,39,39,39,-67,-68,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-31,39,-17,39,39,39,-69,-93,-95,-97,39,39,39,-94,39,-32,39,-62,-63,-7,-33,-78,39,39,-61,39,39,-96,-64,]),'LPAREN':([0,3,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,28,29,30,31,35,38,39,44,45,46,47,49,51,55,61,66,67,68,69,73,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,108,112,114,116,120,121,122,123,124,138,152,153,154,155,158,161,163,172,173,178,179,181,184,185,189,190,194,196,197,200,],[10,10,-4,-5,-6,45,10,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,10,10,67,68,69,10,10,10,10,95,10,10,10,45,10,10,-34,-35,10,10,10,-67,-68,10,10,10,10,10,10,10,10,10,10,10,10,10,10,45,-31,10,-17,10,10,10,-69,-93,-95,156,-97,158,10,10,10,-94,10,-32,10,-62,-63,-7,-33,-78,10,10,195,-61,10,10,-96,-64,]),'NUMBER':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,23,25,31,35,38,39,45,46,47,51,55,61,66,67,68,69,73,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,98,108,112,114,116,120,121,122,124,152,153,154,155,158,161,163,172,173,178,179,181,184,185,190,194,196,197,200,],[26,26,-4,-5,-6,26,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,26,26,26,26,26,26,26,26,26,26,26,-34,-35,26,26,26,-67,-68,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-31,26,144,-17,26,26,26,-69,-93,-95,-97,26,26,26,-94,26,-32,26,-62,-63,-7,-33,-78,26,26,-61,26,26,-96,-64,]),'STRING':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,23,25,31,35,38,39,45,46,47,51,55,61,66,67,68,69,73,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,108,112,114,116,120,121,122,124,152,153,154,155,158,161,163,172,173,178,179,181,184,185,190,194,196,197,200,],[40,40,-4,-5,-6,40,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,40,40,40,40,40,40,40,40,40,40,40,-34,-35,40,40,40,-67,-68,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-31,40,-17,40,40,40,-69,-93,-95,-97,40,40,40,-94,40,-32,40,-62,-63,-7,-33,-78,40,40,-61,40,40,-96,-64,]),'BOOL':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,23,25,31,35,38,39,45,46,47,51,55,61,66,67,68,69,73,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,108,112,114,116,120,121,122,124,152,153,154,155,158,161,163,172,173,178,179,181,184,185,190,194,196,197,200,],[41,41,-4,-5,-6,41,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,41,41,41,41,41,41,41,41,41,41,41,-34,-35,41,41,41,-67,-68,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-31,41,-17,41,41,41,-69,-93,-95,-97,41,41,41,-94,41,-32,41,-62,-63,-7,-33,-78,41,41,-61,41,41,-96,-64,]),'NULL':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,23,25,31,35,38,39,45,46,47,51,55,61,66,67,68,69,73,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,108,112,114,116,120,121,122,124,152,153,154,155,158,161,163,172,173,178,179,181,184,185,190,194,196,197,200,],[42,42,-4,-5,-6,42,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,42,42,42,42,42,42,42,42,42,42,42,-34,-35,42,42,42,-67,-68,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-31,42,-17,42,42,42,-69,-93,-95,-97,42,42,42,-94,42,-32,42,-62,-63,-7,-33,-78,42,42,-61,42,42,-96,-64,]),'LBRACKET':([0,3,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,31,35,37,38,39,40,41,42,44,45,46,47,49,50,51,55,61,66,67,68,69,73,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,96,97,102,108,109,112,113,114,115,116,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,145,152,153,154,155,157,158,161,163,172,173,178,179,181,184,185,187,190,194,196,197,200,],[25,25,-4,-5,-6,47,25,-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,25,25,-55,-60,25,25,90,25,25,-56,-57,-58,98,25,25,25,47,-60,25,25,-34,-35,25,25,25,-67,-68,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-52,-59,-53,-31,25,-54,-17,-72,25,98,25,-70,25,-69,-93,-95,-97,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-91,-12,25,25,25,-94,-71,25,-32,25,-62,-63,-7,-33,-78,25,25,-92,-61,25,25,-96,-64,]),'ASSIGN':([9,44,49,113,146,189,],[46,97,46,97,163,194,]),'PLUS':([9,26,27,37,40,41,42,49,50,92,93,94,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,187,],[-59,-55,-60,78,-56,-57,-58,-59,-60,-52,-59,-53,-54,-72,-70,-40,-41,-42,-43,78,78,78,78,78,78,78,78,-91,-12,-71,-92,]),'TIMES':([9,26,27,37,40,41,42,49,50,92,93,94,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,187,],[-59,-55,-60,80,-56,-57,-58,-59,-60,-52,-59,-53,-54,-72,-70,80,80,-42,-43,80,80,80,80,80,80,80,80,-91,-12,-71,-92,]),'DIVIDE':([9,26,27,37,40,41,42,49,50,92,93,94,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,187,],[-59,-55,-60,81,-56,-57,-58,-59,-60,-52,-59,-53,-54,-72,-70,81,81,-42,-43,81,81,81,81,81,81,81,81,-91,-12,-71,-92,]),'OU':([9,26,27,37,40,41,42,49,50,92,93,94,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,187,],[-59,-55,-60,82,-56,-57,-58,-59,-60,-52,-59,-53,-54,-72,-70,-40,-41,-42,-43,-44,82,-46,-47,-48,-49,-50,-51,-91,-12,-71,-92,]),'AWLA_LOGICAL':([9,26,27,37,40,41,42,49,50,92,93,94,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,187,],[-59,-55,-60,83,-56,-57,-58,-59,-60,-52,-59,-53,-54,-72,-70,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-91,-12,-71,-92,]),'LT':([9,26,27,37,40,41,42,49,50,92,93,94,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,187,],[-59,-55,-60,84,-56,-57,-58,-59,-60,-52,-59,-53,-54,-72,-70,-40,-41,-42,-43,84,84,-46,-47,-48,-49,84,84,-91,-12,-71,-92,]),'LE':([9,26,27,37,40,41,42,49,50,92,93,94,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,187,],[-59,-55,-60,85,-56,-57,-58,-59,-60,-52,-59,-53,-54,-72,-70,-40,-41,-42,-43,85,85,-46,-47,-48,-49,85,85,-91,-12,-71,-92,]),'GT':([9,26,27,37,40,41,42,49,50,92,93,94,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,187,],[-59,-55,-60,86,-56,-57,-58,-59,-60,-52,-59,-53,-54,-72,-70,-40,-41,-42,-43,86,86,-46,-47,-48,-49,86,86,-91,-12,-71,-92,]),'GE':([9,26,27,37,40,41,42,49,50,92,93,94,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,187,],[-59,-55,-60,87,-56,-57,-58,-59,-60,-52,-59,-53,-54,-72,-70,-40,-41,-42,-43,87,87,-46,-47,-48,-49,87,87,-91,-12,-71,-92,]),'EQ':([9,26,27,37,40,41,42,49,50,92,93,94,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,187,],[-59,-55,-60,88,-56,-57,-58,-59,-60,-52,-59,-53,-54,-72,-70,-40,-41,-42,-43,88,88,-46,-47,-48,-49,-50,-51,-91,-12,-71,-92,]),'NE':([9,26,27,37,40,41,42,49,50,92,93,94,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,187,],[-59,-55,-60,89,-56,-57,-58,-59,-60,-52,-59,-53,-54,-72,-70,-40,-41,-42,-43,89,89,-46,-47,-48,-49,-50,-51,-91,-12,-71,-92,]),'DOT':([9,26,27,37,40,41,42,49,50,92,93,94,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,187,],[-59,-55,-60,91,-56,-57,-58,-59,-60,91,-59,91,-54,-72,-70,91,91,91,91,91,91,91,91,91,91,91,91,-91,-12,-71,-92,]),'SEMI':([9,24,26,27,31,32,33,36,37,40,41,42,44,49,50,60,70,71,72,77,92,93,94,100,102,109,113,115,119,125,126,127,128,129,130,131,132,133,134,135,136,138,143,145,157,162,174,180,187,189,198,],[-59,61,-55,66,-98,73,74,-36,-37,-56,-57,-58,96,-59,-60,61,120,-65,-66,124,-52,-59,-53,-38,-54,-72,96,-70,154,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-91,161,-12,-71,179,185,-39,-92,193,201,]),'COLON':([9,26,27,36,37,40,41,42,49,50,60,92,93,94,100,102,104,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,157,180,187,],[-59,-55,-60,-36,-37,-56,-57,-58,-59,-60,114,-52,-59,-53,-38,-54,114,-72,-70,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-91,-12,-71,-39,-92,]),'RBRACE':([11,12,13,14,15,16,17,18,19,20,21,23,26,36,37,40,41,42,49,50,51,53,54,55,56,57,58,61,66,73,74,76,92,93,94,96,100,102,103,108,109,110,111,115,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,145,147,149,150,155,157,161,164,165,166,167,168,172,173,179,180,182,187,190,193,197,200,201,203,],[-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-98,-55,-36,-37,-56,-57,-58,-59,-60,-98,108,109,-98,-19,-73,-75,-34,-35,-67,-68,-98,-52,-59,-53,-31,-38,-54,-74,-17,-72,-18,-19,-70,-69,-93,-95,-97,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-91,-12,-98,-76,-77,-94,-71,-32,181,-98,-82,-83,-84,-62,-63,-33,-39,-81,-92,-61,-85,-96,-64,-86,-87,]),'AWLA':([11,12,13,14,15,16,17,18,19,20,21,61,66,73,74,96,108,120,121,122,124,155,161,172,173,179,190,197,200,],[-28,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-34,-35,-67,-68,-31,-17,-69,-93,-95,-97,-94,-32,184,-63,-33,-61,-96,-64,]),'RBRACKET':([25,26,36,37,40,41,42,49,50,62,63,64,65,92,93,94,100,101,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,137,138,144,145,151,157,180,187,],[-98,-55,-36,-37,-56,-57,-58,-59,-60,115,-13,-14,-15,-52,-59,-53,-38,146,-54,-72,-70,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,157,-91,162,-12,-16,-71,-39,-92,]),'RPAREN':([26,36,37,40,41,42,45,48,49,50,63,64,65,92,93,94,95,99,100,102,109,115,117,118,125,126,127,128,129,130,131,132,133,134,135,136,138,140,141,142,145,151,157,158,159,176,180,186,187,188,191,195,199,],[-55,-36,-37,-56,-57,-58,-98,102,-59,-60,-13,-14,-15,-52,-59,-53,-98,145,-38,-54,-72,-70,152,153,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-91,160,-8,-9,-12,-16,-71,-98,-10,187,-39,192,-92,-11,196,-98,202,]),'COMMA':([26,36,37,40,41,42,49,50,58,65,92,93,94,100,102,109,115,125,126,127,128,129,130,131,132,133,134,135,136,138,145,150,157,159,180,187,],[-55,-36,-37,-56,-57,-58,-59,-60,112,116,-52,-59,-53,-38,-54,-72,-70,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-91,-12,-77,-71,177,-39,-92,]),'EXTENDS':([52,],[106,]),'CATCH':([75,108,122,197,],[123,-17,123,-96,]),'PUBLIC':([108,147,165,167,168,193,201,203,],[-17,170,170,-83,-84,-85,-86,-87,]),'PRIVATE':([108,147,165,167,168,193,201,203,],[-17,171,171,-83,-84,-85,-86,-87,]),'EXCEPTION':([156,],[175,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'external_list':([0,3,],[2,43,]),'external':([0,3,],[3,3,]),'empty':([0,3,23,25,31,45,51,52,55,76,95,147,158,165,195,],[4,4,56,64,72,64,103,107,111,111,142,166,64,166,142,]),'function_def':([0,3,],[5,5,]),'statement':([0,3,23,55,76,152,153,184,196,],[6,6,55,55,55,172,173,190,200,]),'class_def':([0,3,],[7,7,]),'compound':([0,3,23,34,55,76,152,153,160,184,192,196,202,],[11,11,11,75,11,11,11,11,178,11,197,11,203,]),'declaration_stmt':([0,3,23,55,76,152,153,184,196,],[12,12,12,12,12,12,12,12,12,]),'expression_stmt':([0,3,23,55,76,152,153,184,196,],[13,13,13,13,13,13,13,13,13,]),'if_stmt':([0,3,23,55,76,152,153,184,196,],[14,14,14,14,14,14,14,14,14,]),'while_stmt':([0,3,23,55,76,152,153,184,196,],[15,15,15,15,15,15,15,15,15,]),'for_stmt':([0,3,23,55,76,152,153,184,196,],[16,16,16,16,16,16,16,16,16,]),'return_stmt':([0,3,23,55,76,152,153,184,196,],[17,17,17,17,17,17,17,17,17,]),'break_stmt':([0,3,23,55,76,152,153,184,196,],[18,18,18,18,18,18,18,18,18,]),'continue_stmt':([0,3,23,55,76,152,153,184,196,],[19,19,19,19,19,19,19,19,19,]),'try_stmt':([0,3,23,55,76,152,153,184,196,],[20,20,20,20,20,20,20,20,20,]),'throw_stmt':([0,3,23,55,76,152,153,184,196,],[21,21,21,21,21,21,21,21,21,]),'expression':([0,3,10,23,25,31,35,45,46,47,51,55,67,68,69,76,90,97,112,114,116,152,153,154,158,163,184,185,194,196,],[24,24,48,60,65,71,77,65,100,101,104,24,117,118,119,24,137,143,104,150,65,24,24,174,65,180,24,191,198,24,]),'func_call':([0,3,10,23,25,31,35,38,39,45,46,47,51,55,67,68,69,76,78,79,80,81,82,83,84,85,86,87,88,89,90,97,112,114,116,152,153,154,158,163,184,185,194,196,],[27,27,50,27,50,50,50,50,50,50,50,50,50,27,50,50,50,27,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,27,27,50,50,50,27,50,50,27,]),'assignment':([0,3,10,23,25,31,35,45,46,47,51,55,67,68,69,76,90,97,112,114,116,152,153,154,158,163,184,185,194,196,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'binary_expr':([0,3,10,23,25,31,35,38,39,45,46,47,51,55,67,68,69,76,78,79,80,81,82,83,84,85,86,87,88,89,90,97,112,114,116,152,153,154,158,163,184,185,194,196,],[37,37,37,37,37,37,37,92,94,37,37,37,37,37,37,37,37,37,125,126,127,128,129,130,131,132,133,134,135,136,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'stmt_list':([23,55,76,],[53,110,53,]),'dict_items':([23,51,],[54,54,]),'dict_item_list':([23,51,112,],[57,57,149,]),'dict_item':([23,51,112,],[58,58,58,]),'arg_list':([25,45,158,],[62,99,176,]),'arg_list_nonempty':([25,45,116,158,],[63,63,151,63,]),'opt_expr':([31,],[70,]),'class_inheritance':([52,],[105,]),'catch_clauses':([75,122,],[121,155,]),'catch_clause':([75,122,],[122,122,]),'param_list':([95,195,],[140,199,]),'param_list_nonempty':([95,177,195,],[141,188,141,]),'class_body':([147,165,],[164,182,]),'class_member':([147,165,],[165,165,]),'property_decl':([147,165,],[167,167,]),'method_decl':([147,165,],[168,168,]),'access_modifier':([147,165,],[169,169,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> external_list','program',1,'p_program','darija_parser.py',209),
  ('external_list -> external external_list','external_list',2,'p_external_list','darija_parser.py',214),
  ('external_list -> empty','external_list',1,'p_external_list','darija_parser.py',215),
  ('external -> function_def','external',1,'p_external','darija_parser.py',223),
  ('external -> statement','external',1,'p_external','darija_parser.py',224),
  ('external -> class_def','external',1,'p_external','darija_parser.py',225),
  ('function_def -> TYPE ID LPAREN param_list RPAREN compound','function_def',6,'p_function_def','darija_parser.py',230),
  ('param_list -> param_list_nonempty','param_list',1,'p_param_list','darija_parser.py',234),
  ('param_list -> empty','param_list',1,'p_param_list','darija_parser.py',235),
  ('param_list_nonempty -> TYPE ID','param_list_nonempty',2,'p_param_list_nonempty','darija_parser.py',239),
  ('param_list_nonempty -> TYPE ID COMMA param_list_nonempty','param_list_nonempty',4,'p_param_list_nonempty','darija_parser.py',240),
  ('func_call -> ID LPAREN arg_list RPAREN','func_call',4,'p_func_call','darija_parser.py',248),
  ('arg_list -> arg_list_nonempty','arg_list',1,'p_arg_list','darija_parser.py',252),
  ('arg_list -> empty','arg_list',1,'p_arg_list','darija_parser.py',253),
  ('arg_list_nonempty -> expression','arg_list_nonempty',1,'p_arg_list_nonempty','darija_parser.py',260),
  ('arg_list_nonempty -> expression COMMA arg_list_nonempty','arg_list_nonempty',3,'p_arg_list_nonempty','darija_parser.py',261),
  ('compound -> LBRACE stmt_list RBRACE','compound',3,'p_compound','darija_parser.py',269),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list','darija_parser.py',274),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','darija_parser.py',275),
  ('statement -> declaration_stmt','statement',1,'p_statement','darija_parser.py',286),
  ('statement -> expression_stmt','statement',1,'p_statement','darija_parser.py',287),
  ('statement -> if_stmt','statement',1,'p_statement','darija_parser.py',288),
  ('statement -> while_stmt','statement',1,'p_statement','darija_parser.py',289),
  ('statement -> for_stmt','statement',1,'p_statement','darija_parser.py',290),
  ('statement -> return_stmt','statement',1,'p_statement','darija_parser.py',291),
  ('statement -> break_stmt','statement',1,'p_statement','darija_parser.py',292),
  ('statement -> continue_stmt','statement',1,'p_statement','darija_parser.py',293),
  ('statement -> compound','statement',1,'p_statement','darija_parser.py',294),
  ('statement -> try_stmt','statement',1,'p_statement','darija_parser.py',295),
  ('statement -> throw_stmt','statement',1,'p_statement','darija_parser.py',296),
  ('declaration_stmt -> TYPE ID SEMI','declaration_stmt',3,'p_declaration_stmt','darija_parser.py',301),
  ('declaration_stmt -> TYPE ID ASSIGN expression SEMI','declaration_stmt',5,'p_declaration_stmt','darija_parser.py',302),
  ('declaration_stmt -> TYPE ID LBRACKET NUMBER RBRACKET SEMI','declaration_stmt',6,'p_declaration_stmt_array','darija_parser.py',310),
  ('expression_stmt -> expression SEMI','expression_stmt',2,'p_expression_stmt','darija_parser.py',317),
  ('expression_stmt -> func_call SEMI','expression_stmt',2,'p_expression_stmt_func_call','darija_parser.py',322),
  ('expression -> assignment','expression',1,'p_expression','darija_parser.py',327),
  ('expression -> binary_expr','expression',1,'p_expression','darija_parser.py',328),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','darija_parser.py',332),
  ('assignment -> ID LBRACKET expression RBRACKET ASSIGN expression','assignment',6,'p_assignment_array_element','darija_parser.py',337),
  ('binary_expr -> binary_expr PLUS binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',346),
  ('binary_expr -> binary_expr MINUS binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',347),
  ('binary_expr -> binary_expr TIMES binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',348),
  ('binary_expr -> binary_expr DIVIDE binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',349),
  ('binary_expr -> binary_expr OU binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',350),
  ('binary_expr -> binary_expr AWLA_LOGICAL binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',351),
  ('binary_expr -> binary_expr LT binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',352),
  ('binary_expr -> binary_expr LE binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',353),
  ('binary_expr -> binary_expr GT binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',354),
  ('binary_expr -> binary_expr GE binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',355),
  ('binary_expr -> binary_expr EQ binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',356),
  ('binary_expr -> binary_expr NE binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',357),
  ('binary_expr -> MINUS binary_expr','binary_expr',2,'p_binary_expr_uminus','darija_parser.py',361),
  ('binary_expr -> MACHI binary_expr','binary_expr',2,'p_binary_expr_machi','darija_parser.py',365),
  ('binary_expr -> LPAREN expression RPAREN','binary_expr',3,'p_binary_expr_factor','darija_parser.py',370),
  ('binary_expr -> NUMBER','binary_expr',1,'p_binary_expr_factor','darija_parser.py',371),
  ('binary_expr -> STRING','binary_expr',1,'p_binary_expr_factor','darija_parser.py',372),
  ('binary_expr -> BOOL','binary_expr',1,'p_binary_expr_factor','darija_parser.py',373),
  ('binary_expr -> NULL','binary_expr',1,'p_binary_expr_factor','darija_parser.py',374),
  ('binary_expr -> ID','binary_expr',1,'p_binary_expr_factor','darija_parser.py',375),
  ('binary_expr -> func_call','binary_expr',1,'p_binary_expr_factor','darija_parser.py',376),
  ('if_stmt -> ILA LPAREN expression RPAREN statement AWLA statement','if_stmt',7,'p_if_stmt','darija_parser.py',396),
  ('if_stmt -> ILA LPAREN expression RPAREN statement','if_stmt',5,'p_if_stmt','darija_parser.py',397),
  ('while_stmt -> MNINTCHOUF LPAREN expression RPAREN statement','while_stmt',5,'p_while_stmt','darija_parser.py',405),
  ('for_stmt -> KOULLA LPAREN expression SEMI expression SEMI expression RPAREN statement','for_stmt',9,'p_for_stmt','darija_parser.py',410),
  ('opt_expr -> expression','opt_expr',1,'p_opt_expr','darija_parser.py',415),
  ('opt_expr -> empty','opt_expr',1,'p_opt_expr','darija_parser.py',416),
  ('break_stmt -> HRASS SEMI','break_stmt',2,'p_break_stmt','darija_parser.py',421),
  ('continue_stmt -> KML SEMI','continue_stmt',2,'p_continue_stmt','darija_parser.py',425),
  ('return_stmt -> RJ3 opt_expr SEMI','return_stmt',3,'p_return_stmt','darija_parser.py',429),
  ('binary_expr -> LBRACKET arg_list RBRACKET','binary_expr',3,'p_binary_expr_array','darija_parser.py',434),
  ('binary_expr -> binary_expr LBRACKET expression RBRACKET','binary_expr',4,'p_binary_expr_array_access','darija_parser.py',439),
  ('binary_expr -> LBRACE dict_items RBRACE','binary_expr',3,'p_binary_expr_dict','darija_parser.py',446),
  ('dict_items -> dict_item_list','dict_items',1,'p_dict_items','darija_parser.py',451),
  ('dict_items -> empty','dict_items',1,'p_dict_items','darija_parser.py',452),
  ('dict_item_list -> dict_item','dict_item_list',1,'p_dict_item_list','darija_parser.py',459),
  ('dict_item_list -> dict_item COMMA dict_item_list','dict_item_list',3,'p_dict_item_list','darija_parser.py',460),
  ('dict_item -> expression COLON expression','dict_item',3,'p_dict_item','darija_parser.py',470),
  ('class_def -> CLASS ID class_inheritance LBRACE class_body RBRACE','class_def',6,'p_class_def','darija_parser.py',475),
  ('class_inheritance -> EXTENDS ID','class_inheritance',2,'p_class_inheritance','darija_parser.py',479),
  ('class_inheritance -> empty','class_inheritance',1,'p_class_inheritance','darija_parser.py',480),
  ('class_body -> class_member class_body','class_body',2,'p_class_body','darija_parser.py',487),
  ('class_body -> empty','class_body',1,'p_class_body','darija_parser.py',488),
  ('class_member -> property_decl','class_member',1,'p_class_member','darija_parser.py',495),
  ('class_member -> method_decl','class_member',1,'p_class_member','darija_parser.py',496),
  ('property_decl -> access_modifier TYPE ID SEMI','property_decl',4,'p_property_decl','darija_parser.py',500),
  ('property_decl -> access_modifier TYPE ID ASSIGN expression SEMI','property_decl',6,'p_property_decl','darija_parser.py',501),
  ('method_decl -> access_modifier TYPE ID LPAREN param_list RPAREN compound','method_decl',7,'p_method_decl','darija_parser.py',508),
  ('access_modifier -> PUBLIC','access_modifier',1,'p_access_modifier','darija_parser.py',512),
  ('access_modifier -> PRIVATE','access_modifier',1,'p_access_modifier','darija_parser.py',513),
  ('access_modifier -> empty','access_modifier',1,'p_access_modifier','darija_parser.py',514),
  ('binary_expr -> binary_expr DOT ID','binary_expr',3,'p_binary_expr_member_access','darija_parser.py',523),
  ('binary_expr -> binary_expr DOT ID LPAREN arg_list RPAREN','binary_expr',6,'p_binary_expr_method_call','darija_parser.py',527),
  ('try_stmt -> TRY compound catch_clauses','try_stmt',3,'p_try_stmt','darija_parser.py',532),
  ('catch_clauses -> catch_clause catch_clauses','catch_clauses',2,'p_catch_clauses','darija_parser.py',536),
  ('catch_clauses -> catch_clause','catch_clauses',1,'p_catch_clauses','darija_parser.py',537),
  ('catch_clause -> CATCH LPAREN EXCEPTION ID RPAREN compound','catch_clause',6,'p_catch_clause','darija_parser.py',545),
  ('throw_stmt -> THROW expression SEMI','throw_stmt',3,'p_throw_stmt','darija_parser.py',550),
  ('empty -> <empty>','empty',0,'p_empty','darija_parser.py',555),
]
