
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftAWLA_LOGICALleftOUleftEQNEleftLTLEGTGEleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightMACHInonassocILA_IFXnonassocAWLAASSIGN AWLA AWLA_LOGICAL BOOL COMMA DIVIDE EQ GE GT HRASS ID ILA ILA_IFX KML KOULLA LBRACE LE LPAREN LT MACHI MINUS MNINTCHOUF NE NULL NUMBER OU PLUS RBRACE RJ3 RPAREN SEMI STRING TIMES TYPE UMINUSprogram : external_listexternal_list : external external_list\n| emptyexternal : function_def\n| statementfunction_def : TYPE ID LPAREN param_list RPAREN compoundparam_list : param_list_nonemptyparam_list : emptyparam_list_nonempty : TYPE ID\n| TYPE ID COMMA param_list_nonemptycompound : LBRACE stmt_list RBRACEstmt_list : stmt_list statement\n| emptystatement : declaration_stmt\n| expression_stmt\n| if_stmt\n| while_stmt\n| for_stmt\n| return_stmt\n| break_stmt\n| continue_stmt\n| compounddeclaration_stmt : TYPE ID SEMI\n| TYPE ID ASSIGN expression SEMIexpression_stmt : expression SEMIexpression : assignment\n| binary_exprassignment : ID ASSIGN expressionbinary_expr : binary_expr PLUS binary_expr\n| binary_expr MINUS binary_expr\n| binary_expr TIMES binary_expr\n| binary_expr DIVIDE binary_expr\n| binary_expr OU binary_expr\n| binary_expr AWLA_LOGICAL binary_expr\n| binary_expr LT binary_expr\n| binary_expr LE binary_expr\n| binary_expr GT binary_expr\n| binary_expr GE binary_expr\n| binary_expr EQ binary_expr\n| binary_expr NE binary_exprbinary_expr : MINUS binary_expr %prec UMINUSbinary_expr : MACHI binary_exprbinary_expr : LPAREN expression RPAREN\n| NUMBER\n| STRING\n| BOOL\n| NULL\n| ID\n| func_callfunc_call : ID LPAREN arg_list RPARENarg_list : arg_list_nonemptyarg_list : emptyarg_list_nonempty : expression\n| expression COMMA arg_list_nonemptyif_stmt : ILA LPAREN expression RPAREN statement AWLA statement\n| ILA LPAREN expression RPAREN statement %prec ILA_IFXwhile_stmt : MNINTCHOUF LPAREN expression RPAREN statementfor_stmt : KOULLA LPAREN opt_expr SEMI opt_expr SEMI opt_expr RPAREN statementopt_expr : expression\n| emptybreak_stmt : HRASS SEMIcontinue_stmt : KML SEMIreturn_stmt : RJ3 opt_expr SEMIempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,10,11,12,13,14,15,16,17,18,36,41,48,49,68,79,80,108,110,111,114,118,121,],[-64,0,-1,-64,-3,-4,-5,-22,-14,-15,-16,-17,-18,-19,-20,-21,-2,-25,-61,-62,-23,-63,-11,-24,-56,-57,-6,-55,-58,]),'TYPE':([0,3,5,6,10,11,12,13,14,15,16,17,18,26,41,48,49,50,51,67,68,79,80,81,102,103,108,110,111,113,114,115,118,120,121,],[7,7,-4,-5,-22,-14,-15,-16,-17,-18,-19,-20,-21,-64,-25,-61,-62,82,-13,95,-23,-63,-11,-12,82,82,-24,-56,-57,95,-6,82,-55,82,-58,]),'ILA':([0,3,5,6,10,11,12,13,14,15,16,17,18,26,41,48,49,50,51,68,79,80,81,102,103,108,110,111,114,115,118,120,121,],[20,20,-4,-5,-22,-14,-15,-16,-17,-18,-19,-20,-21,-64,-25,-61,-62,20,-13,-23,-63,-11,-12,20,20,-24,-56,-57,-6,20,-55,20,-58,]),'MNINTCHOUF':([0,3,5,6,10,11,12,13,14,15,16,17,18,26,41,48,49,50,51,68,79,80,81,102,103,108,110,111,114,115,118,120,121,],[21,21,-4,-5,-22,-14,-15,-16,-17,-18,-19,-20,-21,-64,-25,-61,-62,21,-13,-23,-63,-11,-12,21,21,-24,-56,-57,-6,21,-55,21,-58,]),'KOULLA':([0,3,5,6,10,11,12,13,14,15,16,17,18,26,41,48,49,50,51,68,79,80,81,102,103,108,110,111,114,115,118,120,121,],[22,22,-4,-5,-22,-14,-15,-16,-17,-18,-19,-20,-21,-64,-25,-61,-62,22,-13,-23,-63,-11,-12,22,22,-24,-56,-57,-6,22,-55,22,-58,]),'RJ3':([0,3,5,6,10,11,12,13,14,15,16,17,18,26,41,48,49,50,51,68,79,80,81,102,103,108,110,111,114,115,118,120,121,],[23,23,-4,-5,-22,-14,-15,-16,-17,-18,-19,-20,-21,-64,-25,-61,-62,23,-13,-23,-63,-11,-12,23,23,-24,-56,-57,-6,23,-55,23,-58,]),'HRASS':([0,3,5,6,10,11,12,13,14,15,16,17,18,26,41,48,49,50,51,68,79,80,81,102,103,108,110,111,114,115,118,120,121,],[24,24,-4,-5,-22,-14,-15,-16,-17,-18,-19,-20,-21,-64,-25,-61,-62,24,-13,-23,-63,-11,-12,24,24,-24,-56,-57,-6,24,-55,24,-58,]),'KML':([0,3,5,6,10,11,12,13,14,15,16,17,18,26,41,48,49,50,51,68,79,80,81,102,103,108,110,111,114,115,118,120,121,],[25,25,-4,-5,-22,-14,-15,-16,-17,-18,-19,-20,-21,-64,-25,-61,-62,25,-13,-23,-63,-11,-12,25,25,-24,-56,-57,-6,25,-55,25,-58,]),'LBRACE':([0,3,5,6,10,11,12,13,14,15,16,17,18,26,41,48,49,50,51,68,79,80,81,102,103,107,108,110,111,114,115,118,120,121,],[26,26,-4,-5,-22,-14,-15,-16,-17,-18,-19,-20,-21,-64,-25,-61,-62,26,-13,-23,-63,-11,-12,26,26,26,-24,-56,-57,-6,26,-55,26,-58,]),'ID':([0,3,5,6,7,9,10,11,12,13,14,15,16,17,18,23,26,29,30,38,39,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,79,80,81,82,95,101,102,103,104,108,110,111,114,115,116,118,120,121,],[8,8,-4,-5,37,8,-22,-14,-15,-16,-17,-18,-19,-20,-21,8,-64,65,65,8,8,-25,8,8,8,-61,-62,8,-13,65,65,65,65,65,65,65,65,65,65,65,65,-23,8,-63,-11,-12,105,106,8,8,8,8,-24,-56,-57,-6,8,8,-55,8,-58,]),'MINUS':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,23,26,28,29,30,31,32,33,34,35,38,39,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,75,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,100,101,102,103,104,108,110,111,114,115,116,118,120,121,],[29,29,-4,-5,-48,29,-22,-14,-15,-16,-17,-18,-19,-20,-21,29,-64,53,29,29,-44,-45,-46,-47,-49,29,29,-25,29,29,29,-61,-62,29,-13,29,29,29,29,29,29,29,29,29,29,29,29,-41,-48,-42,-23,29,-43,-63,-11,-12,-29,-30,-31,-32,53,53,53,53,53,53,53,53,-50,29,29,29,29,-24,-56,-57,-6,29,29,-55,29,-58,]),'MACHI':([0,3,5,6,9,10,11,12,13,14,15,16,17,18,23,26,29,30,38,39,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,79,80,81,101,102,103,104,108,110,111,114,115,116,118,120,121,],[30,30,-4,-5,30,-22,-14,-15,-16,-17,-18,-19,-20,-21,30,-64,30,30,30,30,-25,30,30,30,-61,-62,30,-13,30,30,30,30,30,30,30,30,30,30,30,30,-23,30,-63,-11,-12,30,30,30,30,-24,-56,-57,-6,30,30,-55,30,-58,]),'LPAREN':([0,3,5,6,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,26,29,30,37,38,39,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,68,69,79,80,81,101,102,103,104,108,110,111,114,115,116,118,120,121,],[9,9,-4,-5,39,9,-22,-14,-15,-16,-17,-18,-19,-20,-21,42,43,44,9,-64,9,9,67,9,9,-25,9,9,9,-61,-62,9,-13,9,9,9,9,9,9,9,9,9,9,9,9,39,-23,9,-63,-11,-12,9,9,9,9,-24,-56,-57,-6,9,9,-55,9,-58,]),'NUMBER':([0,3,5,6,9,10,11,12,13,14,15,16,17,18,23,26,29,30,38,39,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,79,80,81,101,102,103,104,108,110,111,114,115,116,118,120,121,],[31,31,-4,-5,31,-22,-14,-15,-16,-17,-18,-19,-20,-21,31,-64,31,31,31,31,-25,31,31,31,-61,-62,31,-13,31,31,31,31,31,31,31,31,31,31,31,31,-23,31,-63,-11,-12,31,31,31,31,-24,-56,-57,-6,31,31,-55,31,-58,]),'STRING':([0,3,5,6,9,10,11,12,13,14,15,16,17,18,23,26,29,30,38,39,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,79,80,81,101,102,103,104,108,110,111,114,115,116,118,120,121,],[32,32,-4,-5,32,-22,-14,-15,-16,-17,-18,-19,-20,-21,32,-64,32,32,32,32,-25,32,32,32,-61,-62,32,-13,32,32,32,32,32,32,32,32,32,32,32,32,-23,32,-63,-11,-12,32,32,32,32,-24,-56,-57,-6,32,32,-55,32,-58,]),'BOOL':([0,3,5,6,9,10,11,12,13,14,15,16,17,18,23,26,29,30,38,39,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,79,80,81,101,102,103,104,108,110,111,114,115,116,118,120,121,],[33,33,-4,-5,33,-22,-14,-15,-16,-17,-18,-19,-20,-21,33,-64,33,33,33,33,-25,33,33,33,-61,-62,33,-13,33,33,33,33,33,33,33,33,33,33,33,33,-23,33,-63,-11,-12,33,33,33,33,-24,-56,-57,-6,33,33,-55,33,-58,]),'NULL':([0,3,5,6,9,10,11,12,13,14,15,16,17,18,23,26,29,30,38,39,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,79,80,81,101,102,103,104,108,110,111,114,115,116,118,120,121,],[34,34,-4,-5,34,-22,-14,-15,-16,-17,-18,-19,-20,-21,34,-64,34,34,34,34,-25,34,34,34,-61,-62,34,-13,34,34,34,34,34,34,34,34,34,34,34,34,-23,34,-63,-11,-12,34,34,34,34,-24,-56,-57,-6,34,34,-55,34,-58,]),'ASSIGN':([8,37,105,],[38,69,69,]),'PLUS':([8,28,31,32,33,34,35,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,100,],[-48,52,-44,-45,-46,-47,-49,-41,-48,-42,-43,-29,-30,-31,-32,52,52,52,52,52,52,52,52,-50,]),'TIMES':([8,28,31,32,33,34,35,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,100,],[-48,54,-44,-45,-46,-47,-49,-41,-48,-42,-43,54,54,-31,-32,54,54,54,54,54,54,54,54,-50,]),'DIVIDE':([8,28,31,32,33,34,35,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,100,],[-48,55,-44,-45,-46,-47,-49,-41,-48,-42,-43,55,55,-31,-32,55,55,55,55,55,55,55,55,-50,]),'OU':([8,28,31,32,33,34,35,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,100,],[-48,56,-44,-45,-46,-47,-49,-41,-48,-42,-43,-29,-30,-31,-32,-33,56,-35,-36,-37,-38,-39,-40,-50,]),'AWLA_LOGICAL':([8,28,31,32,33,34,35,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,100,],[-48,57,-44,-45,-46,-47,-49,-41,-48,-42,-43,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-50,]),'LT':([8,28,31,32,33,34,35,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,100,],[-48,58,-44,-45,-46,-47,-49,-41,-48,-42,-43,-29,-30,-31,-32,58,58,-35,-36,-37,-38,58,58,-50,]),'LE':([8,28,31,32,33,34,35,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,100,],[-48,59,-44,-45,-46,-47,-49,-41,-48,-42,-43,-29,-30,-31,-32,59,59,-35,-36,-37,-38,59,59,-50,]),'GT':([8,28,31,32,33,34,35,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,100,],[-48,60,-44,-45,-46,-47,-49,-41,-48,-42,-43,-29,-30,-31,-32,60,60,-35,-36,-37,-38,60,60,-50,]),'GE':([8,28,31,32,33,34,35,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,100,],[-48,61,-44,-45,-46,-47,-49,-41,-48,-42,-43,-29,-30,-31,-32,61,61,-35,-36,-37,-38,61,61,-50,]),'EQ':([8,28,31,32,33,34,35,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,100,],[-48,62,-44,-45,-46,-47,-49,-41,-48,-42,-43,-29,-30,-31,-32,62,62,-35,-36,-37,-38,-39,-40,-50,]),'NE':([8,28,31,32,33,34,35,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,100,],[-48,63,-44,-45,-46,-47,-49,-41,-48,-42,-43,-29,-30,-31,-32,63,63,-35,-36,-37,-38,-39,-40,-50,]),'SEMI':([8,19,23,24,25,27,28,31,32,33,34,35,37,44,45,46,47,64,65,66,70,75,78,83,84,85,86,87,88,89,90,91,92,93,94,99,100,104,105,112,],[-48,41,-64,48,49,-26,-27,-44,-45,-46,-47,-49,68,-64,79,-59,-60,-41,-48,-42,-28,-43,104,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,108,-50,-64,68,116,]),'RPAREN':([8,27,28,31,32,33,34,35,39,40,46,47,64,65,66,67,70,71,72,73,74,75,76,77,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,100,106,109,116,117,119,],[-48,-26,-27,-44,-45,-46,-47,-49,-64,75,-59,-60,-41,-48,-42,-64,-28,100,-51,-52,-53,-43,102,103,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,107,-7,-8,-50,-9,-54,-64,-10,120,]),'COMMA':([8,27,28,31,32,33,34,35,64,65,66,70,74,75,83,84,85,86,87,88,89,90,91,92,93,94,100,106,],[-48,-26,-27,-44,-45,-46,-47,-49,-41,-48,-42,-28,101,-43,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-50,113,]),'RBRACE':([10,11,12,13,14,15,16,17,18,26,41,48,49,50,51,68,79,80,81,108,110,111,118,121,],[-22,-14,-15,-16,-17,-18,-19,-20,-21,-64,-25,-61,-62,80,-13,-23,-63,-11,-12,-24,-56,-57,-55,-58,]),'AWLA':([10,11,12,13,14,15,16,17,18,41,48,49,68,79,80,108,110,111,118,121,],[-22,-14,-15,-16,-17,-18,-19,-20,-21,-25,-61,-62,-23,-63,-11,-24,115,-57,-55,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'external_list':([0,3,],[2,36,]),'external':([0,3,],[3,3,]),'empty':([0,3,23,26,39,44,67,104,116,],[4,4,47,51,73,47,98,47,47,]),'function_def':([0,3,],[5,5,]),'statement':([0,3,50,102,103,115,120,],[6,6,81,110,111,118,121,]),'compound':([0,3,50,102,103,107,115,120,],[10,10,10,10,10,114,10,10,]),'declaration_stmt':([0,3,50,102,103,115,120,],[11,11,11,11,11,11,11,]),'expression_stmt':([0,3,50,102,103,115,120,],[12,12,12,12,12,12,12,]),'if_stmt':([0,3,50,102,103,115,120,],[13,13,13,13,13,13,13,]),'while_stmt':([0,3,50,102,103,115,120,],[14,14,14,14,14,14,14,]),'for_stmt':([0,3,50,102,103,115,120,],[15,15,15,15,15,15,15,]),'return_stmt':([0,3,50,102,103,115,120,],[16,16,16,16,16,16,16,]),'break_stmt':([0,3,50,102,103,115,120,],[17,17,17,17,17,17,17,]),'continue_stmt':([0,3,50,102,103,115,120,],[18,18,18,18,18,18,18,]),'expression':([0,3,9,23,38,39,42,43,44,50,69,101,102,103,104,115,116,120,],[19,19,40,46,70,74,76,77,46,19,99,74,19,19,46,19,46,19,]),'assignment':([0,3,9,23,38,39,42,43,44,50,69,101,102,103,104,115,116,120,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'binary_expr':([0,3,9,23,29,30,38,39,42,43,44,50,52,53,54,55,56,57,58,59,60,61,62,63,69,101,102,103,104,115,116,120,],[28,28,28,28,64,66,28,28,28,28,28,28,83,84,85,86,87,88,89,90,91,92,93,94,28,28,28,28,28,28,28,28,]),'func_call':([0,3,9,23,29,30,38,39,42,43,44,50,52,53,54,55,56,57,58,59,60,61,62,63,69,101,102,103,104,115,116,120,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'opt_expr':([23,44,104,116,],[45,78,112,119,]),'stmt_list':([26,],[50,]),'arg_list':([39,],[71,]),'arg_list_nonempty':([39,101,],[72,109,]),'param_list':([67,],[96,]),'param_list_nonempty':([67,113,],[97,117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> external_list','program',1,'p_program','darija_parser.py',145),
  ('external_list -> external external_list','external_list',2,'p_external_list','darija_parser.py',150),
  ('external_list -> empty','external_list',1,'p_external_list','darija_parser.py',151),
  ('external -> function_def','external',1,'p_external','darija_parser.py',159),
  ('external -> statement','external',1,'p_external','darija_parser.py',160),
  ('function_def -> TYPE ID LPAREN param_list RPAREN compound','function_def',6,'p_function_def','darija_parser.py',165),
  ('param_list -> param_list_nonempty','param_list',1,'p_param_list_production1','darija_parser.py',171),
  ('param_list -> empty','param_list',1,'p_param_list_production2','darija_parser.py',175),
  ('param_list_nonempty -> TYPE ID','param_list_nonempty',2,'p_param_list_nonempty','darija_parser.py',180),
  ('param_list_nonempty -> TYPE ID COMMA param_list_nonempty','param_list_nonempty',4,'p_param_list_nonempty','darija_parser.py',181),
  ('compound -> LBRACE stmt_list RBRACE','compound',3,'p_compound','darija_parser.py',189),
  ('stmt_list -> stmt_list statement','stmt_list',2,'p_stmt_list','darija_parser.py',194),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','darija_parser.py',195),
  ('statement -> declaration_stmt','statement',1,'p_statement','darija_parser.py',203),
  ('statement -> expression_stmt','statement',1,'p_statement','darija_parser.py',204),
  ('statement -> if_stmt','statement',1,'p_statement','darija_parser.py',205),
  ('statement -> while_stmt','statement',1,'p_statement','darija_parser.py',206),
  ('statement -> for_stmt','statement',1,'p_statement','darija_parser.py',207),
  ('statement -> return_stmt','statement',1,'p_statement','darija_parser.py',208),
  ('statement -> break_stmt','statement',1,'p_statement','darija_parser.py',209),
  ('statement -> continue_stmt','statement',1,'p_statement','darija_parser.py',210),
  ('statement -> compound','statement',1,'p_statement','darija_parser.py',211),
  ('declaration_stmt -> TYPE ID SEMI','declaration_stmt',3,'p_declaration_stmt','darija_parser.py',217),
  ('declaration_stmt -> TYPE ID ASSIGN expression SEMI','declaration_stmt',5,'p_declaration_stmt','darija_parser.py',218),
  ('expression_stmt -> expression SEMI','expression_stmt',2,'p_expression_stmt','darija_parser.py',227),
  ('expression -> assignment','expression',1,'p_expression','darija_parser.py',233),
  ('expression -> binary_expr','expression',1,'p_expression','darija_parser.py',234),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','darija_parser.py',239),
  ('binary_expr -> binary_expr PLUS binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',245),
  ('binary_expr -> binary_expr MINUS binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',246),
  ('binary_expr -> binary_expr TIMES binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',247),
  ('binary_expr -> binary_expr DIVIDE binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',248),
  ('binary_expr -> binary_expr OU binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',249),
  ('binary_expr -> binary_expr AWLA_LOGICAL binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',250),
  ('binary_expr -> binary_expr LT binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',251),
  ('binary_expr -> binary_expr LE binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',252),
  ('binary_expr -> binary_expr GT binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',253),
  ('binary_expr -> binary_expr GE binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',254),
  ('binary_expr -> binary_expr EQ binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',255),
  ('binary_expr -> binary_expr NE binary_expr','binary_expr',3,'p_binary_expr','darija_parser.py',256),
  ('binary_expr -> MINUS binary_expr','binary_expr',2,'p_binary_expr_uminus','darija_parser.py',261),
  ('binary_expr -> MACHI binary_expr','binary_expr',2,'p_binary_expr_machi','darija_parser.py',266),
  ('binary_expr -> LPAREN expression RPAREN','binary_expr',3,'p_binary_expr_factor','darija_parser.py',272),
  ('binary_expr -> NUMBER','binary_expr',1,'p_binary_expr_factor','darija_parser.py',273),
  ('binary_expr -> STRING','binary_expr',1,'p_binary_expr_factor','darija_parser.py',274),
  ('binary_expr -> BOOL','binary_expr',1,'p_binary_expr_factor','darija_parser.py',275),
  ('binary_expr -> NULL','binary_expr',1,'p_binary_expr_factor','darija_parser.py',276),
  ('binary_expr -> ID','binary_expr',1,'p_binary_expr_factor','darija_parser.py',277),
  ('binary_expr -> func_call','binary_expr',1,'p_binary_expr_factor','darija_parser.py',278),
  ('func_call -> ID LPAREN arg_list RPAREN','func_call',4,'p_func_call','darija_parser.py',293),
  ('arg_list -> arg_list_nonempty','arg_list',1,'p_arg_list_production1','darija_parser.py',298),
  ('arg_list -> empty','arg_list',1,'p_arg_list_production2','darija_parser.py',302),
  ('arg_list_nonempty -> expression','arg_list_nonempty',1,'p_arg_list_nonempty','darija_parser.py',307),
  ('arg_list_nonempty -> expression COMMA arg_list_nonempty','arg_list_nonempty',3,'p_arg_list_nonempty','darija_parser.py',308),
  ('if_stmt -> ILA LPAREN expression RPAREN statement AWLA statement','if_stmt',7,'p_if_stmt','darija_parser.py',317),
  ('if_stmt -> ILA LPAREN expression RPAREN statement','if_stmt',5,'p_if_stmt','darija_parser.py',318),
  ('while_stmt -> MNINTCHOUF LPAREN expression RPAREN statement','while_stmt',5,'p_while_stmt','darija_parser.py',327),
  ('for_stmt -> KOULLA LPAREN opt_expr SEMI opt_expr SEMI opt_expr RPAREN statement','for_stmt',9,'p_for_stmt','darija_parser.py',333),
  ('opt_expr -> expression','opt_expr',1,'p_opt_expr','darija_parser.py',338),
  ('opt_expr -> empty','opt_expr',1,'p_opt_expr','darija_parser.py',339),
  ('break_stmt -> HRASS SEMI','break_stmt',2,'p_break_stmt','darija_parser.py',345),
  ('continue_stmt -> KML SEMI','continue_stmt',2,'p_continue_stmt','darija_parser.py',350),
  ('return_stmt -> RJ3 opt_expr SEMI','return_stmt',3,'p_return_stmt','darija_parser.py',355),
  ('empty -> <empty>','empty',0,'p_empty','darija_parser.py',361),
]
